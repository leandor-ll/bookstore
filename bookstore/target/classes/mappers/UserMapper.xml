<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.book.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.book.domain.User">
    <id column="uid" jdbcType="VARCHAR" property="uid" />
    <result column="uname" jdbcType="VARCHAR" property="uname" />
    <result column="upassword" jdbcType="VARCHAR" property="upassword" />
    <result column="uIDcard" jdbcType="VARCHAR" property="uidcard" />
    <result column="udentity" jdbcType="VARCHAR" property="udentity" />
    <result column="uprice" jdbcType="INTEGER" property="uprice" />
    <result column="upic" jdbcType="VARCHAR" property="upic" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uid, uname, upassword, uIDcard, udentity, uprice, upic
  </sql>
  <select id="selectByExample" parameterType="com.book.domain.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from u_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from u_book
    where uid = #{uid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from u_book
    where uid = #{uid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.book.domain.UserExample">
    delete from u_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.book.domain.User">
    insert into u_book (uid, uname, upassword, 
      uIDcard, udentity, uprice, 
      upic)
    values (#{uid,jdbcType=VARCHAR}, #{uname,jdbcType=VARCHAR}, #{upassword,jdbcType=VARCHAR}, 
      #{uidcard,jdbcType=VARCHAR}, #{udentity,jdbcType=VARCHAR}, #{uprice,jdbcType=INTEGER}, 
      #{upic,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.book.domain.User">
    insert into u_book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="uname != null">
        uname,
      </if>
      <if test="upassword != null">
        upassword,
      </if>
      <if test="uidcard != null">
        uIDcard,
      </if>
      <if test="udentity != null">
        udentity,
      </if>
      <if test="uprice != null">
        uprice,
      </if>
      <if test="upic != null">
        upic,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="uname != null">
        #{uname,jdbcType=VARCHAR},
      </if>
      <if test="upassword != null">
        #{upassword,jdbcType=VARCHAR},
      </if>
      <if test="uidcard != null">
        #{uidcard,jdbcType=VARCHAR},
      </if>
      <if test="udentity != null">
        #{udentity,jdbcType=VARCHAR},
      </if>
      <if test="uprice != null">
        #{uprice,jdbcType=INTEGER},
      </if>
      <if test="upic != null">
        #{upic,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.book.domain.UserExample" resultType="java.lang.Long">
    select count(*) from u_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update u_book
    <set>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=VARCHAR},
      </if>
      <if test="record.uname != null">
        uname = #{record.uname,jdbcType=VARCHAR},
      </if>
      <if test="record.upassword != null">
        upassword = #{record.upassword,jdbcType=VARCHAR},
      </if>
      <if test="record.uidcard != null">
        uIDcard = #{record.uidcard,jdbcType=VARCHAR},
      </if>
      <if test="record.udentity != null">
        udentity = #{record.udentity,jdbcType=VARCHAR},
      </if>
      <if test="record.uprice != null">
        uprice = #{record.uprice,jdbcType=INTEGER},
      </if>
      <if test="record.upic != null">
        upic = #{record.upic,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update u_book
    set uid = #{record.uid,jdbcType=VARCHAR},
      uname = #{record.uname,jdbcType=VARCHAR},
      upassword = #{record.upassword,jdbcType=VARCHAR},
      uIDcard = #{record.uidcard,jdbcType=VARCHAR},
      udentity = #{record.udentity,jdbcType=VARCHAR},
      uprice = #{record.uprice,jdbcType=INTEGER},
      upic = #{record.upic,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.book.domain.User">
    update u_book
    <set>
      <if test="uname != null">
        uname = #{uname,jdbcType=VARCHAR},
      </if>
      <if test="upassword != null">
        upassword = #{upassword,jdbcType=VARCHAR},
      </if>
      <if test="uidcard != null">
        uIDcard = #{uidcard,jdbcType=VARCHAR},
      </if>
      <if test="udentity != null">
        udentity = #{udentity,jdbcType=VARCHAR},
      </if>
      <if test="uprice != null">
        uprice = #{uprice,jdbcType=INTEGER},
      </if>
      <if test="upic != null">
        upic = #{upic,jdbcType=VARCHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.book.domain.User">
    update u_book
    set uname = #{uname,jdbcType=VARCHAR},
      upassword = #{upassword,jdbcType=VARCHAR},
      uIDcard = #{uidcard,jdbcType=VARCHAR},
      udentity = #{udentity,jdbcType=VARCHAR},
      uprice = #{uprice,jdbcType=INTEGER},
      upic = #{upic,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=VARCHAR}
  </update>
  
  <!-- mybatis -->
  <insert id="addUser" parameterType="com.book.domain.User">
  	insert into u_book(uid,uname,upassword,uIDcard,udentity,uprice,upic) values(${uid},#{uname},#{upassword},#{uIDcard},#{udentity},#{uprice},#{upic})
  </insert>
  
  <select id="selectUname" resultType="com.book.domain.User">
  	select * from u_book where uname=#{name}
  </select>
  
  <select id="findNamePassword" resultType="com.book.domain.User">
  	select uid,uname,upassword,uIDcard,udentity,uprice,upic from u_book where uname=#{arg0} and upassword=#{arg1}
  </select>
  
  <update id="updataPassword">
  	update u_book set upassword = #{arg2} where uname=#{arg0} and uIDcard =#{arg1}
  </update>
  
  <select id="selectPassword" resultType="string">
  	select uid,uname,upassword,uIDcard,udentity,uprice,upic from u_book where uname=#{uname}
  </select>
  
  <select id="userPrice" resultType="Object">
  	SELECT uprice FROM u_book where uname =#{uuname}
  </select>
  
  <update id="updateaddprice">
  	update u_book set uprice = uprice + #{arg0} where uname = #{arg1}
  </update>
  
  <select id="checkDentity" resultType="object">
  	SELECT udentity FROM u_book where uname = #{uuname}
  </select>
  
  <update id="changeDentity">
  	update u_book set udentity = 2 where uname = #{uuname}
  </update>
</mapper>









